- name: Shipping service is written in Java, Hence we need to install Java.
  hosts: shipping
  become: yes
  tasks: 
  - name: install maven
    ansible.builtin.yum:
      name: maven
      state: installed

  - name: Check application User
    ansible.builtin.command: id roboshop
    register: u
    ignor_errors: true

  - name: Create app user
    ansible.builtin.user:
      name: roboshop
    when: u.rc != 0

  - name: Check app dir
    ansible.builtin.stat:
      path: /app
    register: d

  - name: Create app dir
    ansible.builtin.file:
      path: /app
      state: directory
    when: d.stat.exists == False

  - name: Download & unarchive package of shipping
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes

  - name: download the dependencies & build the application
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: Renaming jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name : Setup SystemD Shipping Service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: Load the service.
    ansible.builtin.systemd:
      daemon_reload: yes

  - name: Enable & Start shipping service
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes

  - name: install mysql client.
    ansible.builtin.yum:
      name: mysql
      state: installed

  - name: Load Schema
    ansible.builtin.shell: 'mysql -h mysql.devopsaws.site -uroot -pRoboShop@1 < /app/schema/shipping.sql '
  
  - name: Restart shipping service
    ansible.builtin.service:
      name: shipping
      state: restarted

