- name: installing catalogue nodejs app
  hosts: catalogue
  become: yes
  tasks:
  - name: Setup NodeJS repos
    ansible.builtin.shell: 'curl -sL https://rpm.nodesource.com/setup_lts.x | bash'
  - name: install nodejs
    ansible.builtin.yum:
      name: nodejs
      state: installed
  - name: cheking user if alredy existed
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true
  - name: creating user if not existed
    ansible.builtin.user:
      name: roboshop
    when: out.rc != 0
  - name: checking dir
    ansible.builtin.stat:
      path: /app
    register: dir
  - name: creating dir
    ansible.builtin.file:
      path: /app
      state: directory
    when: dir.stat.exists == False
  - name: downloading package of catalogue
    ansible.builtin.get_url: 
      url:  https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp/catalogue.zip 

  - name: changing working dir
    ansible.builtin.command: cd /app

  - name: Unarchive a catalogue package that is already on the remote machine
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip 
      dest: /app
      remote_src: yes

  - name: installing dependencies 
    ansible.builtin.command: npm install 
      args:
        chdir: /app

  - name: coping catalogue.service file
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
  - name: daemon-reload to pick up config changes
    ansible.builtin.systemd:
      daemon_reload: true
  - name: enabling and starting service catalogue
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes
  - name: copying file to repo dir
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo
  - name: installing mongodb client
    ansible.builtin.yum:
      name: mongodb-org-shell
      state: installed
  - name: Loading catalogue date into mongodb Schema
    ansible.builtin.command:  'mongo --host mongodb:mongodb.devopsaws.site < /app/schema/catalogue.js'

